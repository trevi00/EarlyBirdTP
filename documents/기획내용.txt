프로젝트명
EarlyBird

팀명 
OverFlow

개발 기간
05.07~05.16

기획 배경
문제점
아침 일찍 일어나는 습관을 들이기 어려운 사람들

기상 직후 무기력함으로 인해 하루를 비효율적으로 시작

단순 알람 어플은 동기 부여 기능이 부족함

날씨나 일기를 별도로 확인하거나 기록해야 하는 번거로움

해결방안
출석 체크, 날씨 확인, 일기 쓰기, 포인트 획득, 새의 응원 메시지 등을 통합한 올인원 아침 습관 관리 앱

‘출석 → 포인트 → 새 성장’의 피드백 루프를 통한 지속적인 동기 부여

시각적 즐거움(캐릭터 성장, 응원 배너) 및 날씨 데이터 자동화로 UX 개선

프로젝트 설명
얼리버드 1.0은 아침에 기상하여 출석 체크를 하면 포인트를 얻고, 해당 포인트로 자신의 새를 성장시키는 게임적 요소를 결합한 습관 형성 어플리케이션입니다.
또한, 사용자는 실시간 날씨 정보 확인, 일기 작성 및 조회, 출석 통계 확인, 새의 응원 메시지 확인이 가능합니다.

주요 기능
아침 출석 체크 (2시~9시 사이 가능)

실시간 날씨 조회 (공공 API 활용, 새벽 4시 자동 갱신)

일기 작성/조회/수정/삭제

출석 포인트 시스템

새 성장 시스템 (아기새 → 어른새)

새 클릭 시 응원 메시지 출력

상단 배너로 새의 말과 프로필 시각화

개발 일정
날짜   주요 작업
05.07~09   기획 완료, 구조 설계, 책임 분리 인터페이스 정의
05.10   UI 설계, 핵심 기능(Bird, Attendance, Weather) 클래스 구현
05.11~12   일기 및 유저 관리 기능 구현 (DB 연동 포함)
05.12   메시지 관리 시스템, 포인트 시스템 구현
05.13   전체 기능 통합 및 화면 연결, 기본 테스트
05.14~15   버그 수정, UI/UX 개선, 마무리 디자인 적용
05.16   발표 및 문서화

핵심 목표
출석 기능과 함께 습관 형성을 유도하는 시각적 피드백 시스템 제공

단순 출석을 넘어서 날씨·일기·메시지 등 기상 후 루틴을 자연스럽게 정착

SOLID 원칙 기반 구조화 + 확장 가능한 설계

트러블슈팅 경험 문서화를 통한 포트폴리오 구성

부팀장 김경수 전체 구조 설계, 설계 문서화, 코드 리뷰, 트러블슈팅, 기능 통합, 메시지 관리 시스템 설계

팀장 신희우 일정 관리, 회의 주도, Oracle DB 설계, JDBC 연동, 공공 날씨 API 연동 및 날씨 자동 갱신 기능

부팀장 출석 시스템 및 포인트 시스템 메인 담당, 발표자료 제작, 메인 메뉴 화면 설계

팀원 1 : Bird 성장 시스템, 포인트 누적 로직, 클릭 시 메시지 출력 로직

팀원 2 : UI/UX 구성 (Swing 기반), 배너 시각화 처리

팀원 3 : 일기 작성/조회/수정/삭제 기능 전체 구현, 날짜별 조회 및 삭제 처리

팀원 4 : 회원가입/로그인 기능 구현, 세션 관리 로직, 출석 가능 시간 제한 로직

기술 스택
Java 17

AWT / Swing (GUI)

Oracle DB + JDBC 연동

Gradle 빌드 시스템

개발 방향
도메인, UI, 서비스, 리포지토리 등 계층형 아키텍처 적용

기능 분리를 위한 OOP 설계

기능별 모듈화로 유지보수 및 확장성 확보

새 메시지, 날씨 캐싱 등 성능 최적화 고려